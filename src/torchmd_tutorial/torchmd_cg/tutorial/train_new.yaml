# modified according to the old one and https://github.com/torchmd/torchmd-protein-thermodynamics/blob/main/Tutorials/1-Tutorial-CG-NNP-Training.ipynb
dataset: "Custom"
coord_files: "data/chignolin_ca_coords.npy"
force_files: "data2/chignolin_ca_deltaforces.npy"
embed_files: "data2/chignolin_ca_embeddings.npy"
# used to take the derivative of the prediction w.r.t coordinates,
# because data is force, not energy
derivative: true
log_dir: train_log
num_epochs: 200
batch_size: 1024
inference_batchsize: 256
lr: 0.0005
lr_factor: 0.8
lr_min: 1.0e-06
lr_patience: 10
lr_warmup_steps: 0
model: graph-network
neighbor_embedding: false
ngpus: -1
num_nodes: 1
num_workers: 8
seed: 94572
test_interval: 2
save_interval: 2
val_size: 0.05
test_size: 0.1
# embedding_dimension is num_filters in schnet
embedding_dimension: 128
rbf_type: "expnorm"
num_rbf: 18
trainable_rbf: true
# num_layers is num_interactions in schnet
num_layers: 3
max_z: 100
# I guess cutoff_upper equals cutoff in the original train.yaml
cutoff_upper: 12.0
cutoff_lower: 3.0
early_stopping_patience: 30
weight_decay: 0.0